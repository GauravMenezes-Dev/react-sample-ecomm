{"ast":null,"code":"import _defineProperty from \"/Users/pepsico/React/e-comm/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport const addItemGrouper = (cartItems, selItem) => {\n  const existingItems = cartItems.find(cartItems => cartItems.id === selItem.id);\n\n  if (existingItems) {\n    return cartItems.map(cartItem => cartItem.id === selItem.id ? _objectSpread({}, cartItem, {\n      quantity: cartItem.quantity + 1\n    }) : cartItem);\n  } else {\n    return [...cartItems, _objectSpread({}, selItem, {\n      quantity: 1\n    })];\n  }\n};\n/*We need to know if there are any items\nand then decrease by 1 or remove if there is only 1 */\n\nexport const removeItemFromCart = (cartItems, itemToRemove) => {\n  const existingItem = cartItems.find(cartItem => cartItem.id === itemToRemove.id);\n\n  if (existingItem.quantity === 1) {\n    return cartItems.filter(cartItem => cartItem.id !== itemToRemove.id);\n  } else {\n    return cartItems.map(cartItem => cartItem.id === itemToRemove.id ? _objectSpread({}, cartItem, {\n      quantity: cartItem.quantity - 1\n    }) : cartItem);\n  }\n};","map":{"version":3,"sources":["/Users/pepsico/React/e-comm/src/redux/cart/cart.utils.js"],"names":["addItemGrouper","cartItems","selItem","existingItems","find","id","map","cartItem","quantity","removeItemFromCart","itemToRemove","existingItem","filter"],"mappings":";;;;;;AAAA,OAAO,MAAMA,cAAc,GAAG,CAACC,SAAD,EAAYC,OAAZ,KAAuB;AACjD,QAAMC,aAAa,GAAGF,SAAS,CAACG,IAAV,CACjBH,SAAD,IAAeA,SAAS,CAACI,EAAV,KAAiBH,OAAO,CAACG,EADtB,CAAtB;;AAEA,MAAGF,aAAH,EAAiB;AACb,WAAOF,SAAS,CAACK,GAAV,CAAcC,QAAQ,IACvBA,QAAQ,CAACF,EAAT,KAAgBH,OAAO,CAACG,EAAzB,qBAAiCE,QAAjC;AAA2CC,MAAAA,QAAQ,EAAED,QAAQ,CAACC,QAAT,GAAkB;AAAvE,SACAD,QAFE,CAAP;AAIH,GALD,MAMK;AACD,WAAO,CAAC,GAAGN,SAAJ,oBAAkBC,OAAlB;AAA0BM,MAAAA,QAAQ,EAAC;AAAnC,OAAP;AACH;AACJ,CAZM;AAcP;;;AAGA,OAAO,MAAMC,kBAAkB,GAAG,CAACR,SAAD,EAAYS,YAAZ,KAA6B;AAC3D,QAAMC,YAAY,GAAGV,SAAS,CAACG,IAAV,CACjBG,QAAQ,IAAIA,QAAQ,CAACF,EAAT,KAAgBK,YAAY,CAACL,EADxB,CAArB;;AAIA,MAAGM,YAAY,CAACH,QAAb,KAA0B,CAA7B,EAAgC;AAC5B,WAAOP,SAAS,CAACW,MAAV,CAAiBL,QAAQ,IAAIA,QAAQ,CAACF,EAAT,KAAcK,YAAY,CAACL,EAAxD,CAAP;AACH,GAFD,MAIA;AACI,WAAQJ,SAAS,CAACK,GAAV,CAAeC,QAAD,IACjBA,QAAQ,CAACF,EAAT,KAAgBK,YAAY,CAACL,EAA9B,qBAEIE,QAFJ;AAEaC,MAAAA,QAAQ,EAAED,QAAQ,CAACC,QAAT,GAAkB;AAFzC,SAGAD,QAJI,CAAR;AAMH;AACJ,CAjBM","sourcesContent":["export const addItemGrouper = (cartItems, selItem)=> {\n    const existingItems = cartItems.find(\n        (cartItems) => cartItems.id === selItem.id)\n    if(existingItems){\n        return cartItems.map(cartItem =>\n            ((cartItem.id === selItem.id)?{...cartItem, quantity: cartItem.quantity+1}\n            :cartItem)\n        )\n    }\n    else {\n        return [...cartItems,{...selItem,quantity:1}]\n    }\n}\n\n/*We need to know if there are any items\nand then decrease by 1 or remove if there is only 1 */\n\nexport const removeItemFromCart = (cartItems, itemToRemove) => {\n    const existingItem = cartItems.find(\n        cartItem => cartItem.id === itemToRemove.id\n    )\n\n    if(existingItem.quantity === 1) {\n        return cartItems.filter(cartItem => cartItem.id!==itemToRemove.id)\n    }\n    else\n    {\n        return  cartItems.map((cartItem) => \n            (cartItem.id === itemToRemove.id)\n            ?\n            {...cartItem,quantity: cartItem.quantity-1}:\n            cartItem\n            )\n    }\n}"]},"metadata":{},"sourceType":"module"}