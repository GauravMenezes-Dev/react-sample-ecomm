{"ast":null,"code":"var _jsxFileName = \"/Users/pepsico/React/e-comm/src/components/sign-in/sign-in.components.jsx\";\nimport React from 'react';\nimport './sign-in.styles.scss';\nimport FormInput from '../form-input/form-input.components';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\nimport { connect } from 'react-redux';\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const esis = this.props.esis;\n      const _this$state = this.state,\n            email = _this$state.email,\n            password = _this$state.password;\n      esis(email, password);\n    };\n\n    this.handleChange = event => {\n      const _event$target = event.target,\n            value = _event$target.value,\n            name = _event$target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: \"\",\n      password: \"\"\n    };\n  }\n\n  render() {\n    const gsis = this.props.gsis;\n    return React.createElement(\"div\", {\n      className: \"sign-in\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Sign me in!\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \" Sign in with your Email and Password!\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      name: \"email\",\n      value: this.state.email,\n      handleChange: this.handleChange,\n      label: \"Email\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      name: \"password\",\n      type: \"password\",\n      value: this.state.password,\n      handleChange: this.handleChange,\n      label: \"Password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(CustomButton, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Sign In!\"), React.createElement(CustomButton, {\n      type: \"button\",\n      onClick: gsis,\n      isGoogleSignIn: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Sign in With Google!\"))));\n  }\n\n}\n\nconst mdtp = dispatch => ({\n  gsis: () => dispatch(googleSignInStart()),\n  esis: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mdtp)(SignIn);","map":{"version":3,"sources":["/Users/pepsico/React/e-comm/src/components/sign-in/sign-in.components.jsx"],"names":["React","FormInput","CustomButton","googleSignInStart","emailSignInStart","connect","SignIn","Component","constructor","props","handleSubmit","event","preventDefault","esis","state","email","password","handleChange","target","value","name","setState","render","gsis","mdtp","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './sign-in.styles.scss';\nimport FormInput from '../form-input/form-input.components'\nimport CustomButton from '../custom-button/custom-button.component';\nimport {googleSignInStart, emailSignInStart} from '../../redux/user/user.actions'\nimport {connect} from 'react-redux'\n\nclass SignIn extends React.Component {\n    constructor (props) {\n        super (props)\n        this.state = {\n            email: \"\",\n            password: \"\"\n        }\n    }\n\n    handleSubmit = async event => {\n        event.preventDefault();\n        const {esis} = this.props;\n        const {email,password} = this.state\n        esis(email,password);\n    }\n\n    handleChange = event => {\n        const {value,name} = event.target\n        this.setState({\n            [name]:value\n        })\n    }\n\n    render() {\n        const {gsis}= this.props\n        return(\n            <div className=\"sign-in\">\n                <h2>Sign me in!</h2>\n                <span> Sign in with your Email and Password!</span>\n                <form onSubmit={this.handleSubmit}>\n                    <FormInput \n                        name=\"email\" \n                        value={this.state.email} \n                        handleChange={this.handleChange} \n                        label=\"Email\" \n                        required/>\n                    <FormInput \n                        name=\"password\" \n                        type=\"password\"\n                        value={this.state.password} \n                        handleChange={this.handleChange} \n                        label=\"Password\"\n                        required/>\n                    <div className=\"buttons\">\n                        <CustomButton type=\"submit\">\n                            Sign In!\n                        </CustomButton>\n                        <CustomButton \n                            type=\"button\" \n                            onClick={gsis} \n                            isGoogleSignIn\n                        >\n                            Sign in With Google!\n                        </CustomButton>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mdtp = dispatch => ({\n    gsis: ()=> dispatch(googleSignInStart()),\n    esis: (email,password)=> dispatch(emailSignInStart({email,password}))\n})\n\nexport default connect(null,mdtp)(SignIn)"]},"metadata":{},"sourceType":"module"}