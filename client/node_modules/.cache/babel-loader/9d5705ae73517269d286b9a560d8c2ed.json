{"ast":null,"code":"import _defineProperty from \"/Users/pepsico/React/e-comm/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyA5JuNW8UzuF-keyU2a34GRGh73SKp5BgM\",\n  authDomain: \"sampleapp-4e2b4.firebaseapp.com\",\n  databaseURL: \"https://sampleapp-4e2b4.firebaseio.com\",\n  projectId: \"sampleapp-4e2b4\",\n  storageBucket: \"\",\n  messagingSenderId: \"524849369507\",\n  appId: \"1:524849369507:web:560d3d5812ef6288\"\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const createUserProfileDoc = async (userAuth, addtnlData) => {\n  if (!userAuth) return;\n  const uRef = firestore.doc(\"users/\".concat(userAuth.uid));\n  const snap = await uRef.get();\n\n  if (!snap.exists) {\n    const displayName = userAuth.displayName,\n          email = userAuth.email;\n    const createdAt = new Date();\n\n    try {\n      await uRef.set(_objectSpread({\n        displayName,\n        email,\n        createdAt\n      }, addtnlData));\n    } catch (error) {\n      console.log(\"Error: \".concat(error));\n    }\n  }\n\n  return uRef;\n};\nexport const firestore = firebase.firestore();\n/* Google Authentication */\n\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\nexport default firebase;\nexport const addCollAndDocs = async (collectionKey, DocsToAdd) => {\n  const collRef = firestore.collection(collectionKey);\n  const batch = firestore.batch(); //loops through DocsToAdd and batches all calls.\n\n  DocsToAdd.forEach(obj => {\n    const newDocRef = collRef.doc();\n    batch.set(newDocRef, obj);\n  });\n  return await batch.commit();\n};\nexport const convSnapToMap = collections => {\n  const transCol = collections.docs.map(doc => {\n    const _doc$data = doc.data(),\n          title = _doc$data.title,\n          items = _doc$data.items;\n\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items\n    };\n  });\n  return transCol.reduce((acc, col) => {\n    acc[col.title.toLowerCase()] = col;\n    return acc;\n  }, {});\n};\nexport const getCurrentUser = () => {\n  return new Promise((resolve, reject) => {\n    const unsubscribe = auth.onAuthStateChanged(userAuth => {\n      unsubscribe();\n      resolve(userAuth);\n    }, reject);\n  });\n};","map":{"version":3,"sources":["/Users/pepsico/React/e-comm/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","initializeApp","auth","createUserProfileDoc","userAuth","addtnlData","uRef","firestore","doc","uid","snap","get","exists","displayName","email","createdAt","Date","set","error","console","log","googleProvider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup","addCollAndDocs","collectionKey","DocsToAdd","collRef","collection","batch","forEach","obj","newDocRef","commit","convSnapToMap","collections","transCol","docs","map","data","title","items","routeName","encodeURI","toLowerCase","id","reduce","acc","col","getCurrentUser","Promise","resolve","reject","unsubscribe","onAuthStateChanged"],"mappings":"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","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst config = {\n    apiKey: \"AIzaSyA5JuNW8UzuF-keyU2a34GRGh73SKp5BgM\",\n    authDomain: \"sampleapp-4e2b4.firebaseapp.com\",\n    databaseURL: \"https://sampleapp-4e2b4.firebaseio.com\",\n    projectId: \"sampleapp-4e2b4\",\n    storageBucket: \"\",\n    messagingSenderId: \"524849369507\",\n    appId: \"1:524849369507:web:560d3d5812ef6288\"\n};\n\nfirebase.initializeApp(config);\n\nexport const auth = firebase.auth();\nexport const createUserProfileDoc = async(userAuth, addtnlData) => {\n    if(!userAuth) return;\n    const uRef= (firestore.doc(`users/${userAuth.uid}`))\n    const snap = await uRef.get()\n    if (!snap.exists){\n        const {displayName,email} = userAuth;\n        const createdAt = new Date();\n        try {\n            await uRef.set({\n                displayName,\n                email,\n                createdAt,\n                ...addtnlData\n            })\n        }\n        catch(error){\n            console.log(`Error: ${error}`)\n        }\n    }\n    return uRef;\n}\nexport const firestore = firebase.firestore();\n\n/* Google Authentication */\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\ngoogleProvider.setCustomParameters({prompt: 'select_account'});\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider)\n\nexport default firebase;\n\nexport const addCollAndDocs = async (collectionKey,DocsToAdd) => {\n    const collRef = firestore.collection(collectionKey);\n    const batch = firestore.batch();\n\n    //loops through DocsToAdd and batches all calls.\n\n    DocsToAdd.forEach(obj => {\n        const newDocRef = collRef.doc();\n        batch.set(newDocRef,obj);\n    })\n\n    return await batch.commit();\n}\n\nexport const convSnapToMap = (collections) => {\n    const transCol = collections.docs.map(\n        doc => {\n            const {title,items} = doc.data();\n            return ({\n                routeName: encodeURI(title.toLowerCase()),\n                id: doc.id,\n                title,\n                items\n            })\n        }\n    )\n    return transCol.reduce((acc,col)=>{\n        acc[col.title.toLowerCase()] = col;\n        return acc;\n    },{})\n}\n\nexport const getCurrentUser = () => {\n    return new Promise((resolve,reject) => {\n        const unsubscribe = auth.onAuthStateChanged(\n            userAuth => {\n                unsubscribe();\n                resolve(userAuth);\n            } , reject\n        )\n    })\n}"]},"metadata":{},"sourceType":"module"}