{"ast":null,"code":"import _defineProperty from \"/Users/pepsico/React/e-comm/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { UserActionTypes } from './user.types';\nconst INITIAL_STATE = {\n  currentUser: null\n};\n\nconst userRed = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case UserActionTypes.GOOGLE_SIGN_IN_SUCCESS:\n    case UserActionTypes.EMAIL_SIGN_IN_SUCCESS:\n      return _objectSpread({}, state, {\n        currentUser: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default userRed;","map":{"version":3,"sources":["/Users/pepsico/React/e-comm/src/redux/user/user.reducer.js"],"names":["UserActionTypes","INITIAL_STATE","currentUser","userRed","state","action","type","GOOGLE_SIGN_IN_SUCCESS","EMAIL_SIGN_IN_SUCCESS","payload"],"mappings":";;;;;;AAAA,SAAQA,eAAR,QAA8B,cAA9B;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,WAAW,EAAE;AADK,CAAtB;;AAIA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGH,aAAT,EAAwBI,MAAxB,KAChB;AACI,UAAQA,MAAM,CAACC,IAAf;AAEI,SAAKN,eAAe,CAACO,sBAArB;AACA,SAAKP,eAAe,CAACQ,qBAArB;AACI,+BACOJ,KADP;AAEIF,QAAAA,WAAW,EAAEG,MAAM,CAACI;AAFxB;;AAKJ;AACI,aAAOL,KAAP;AAVR;AAYH,CAdD;;AAgBA,eAAeD,OAAf","sourcesContent":["import {UserActionTypes} from './user.types'\n\nconst INITIAL_STATE = {\n    currentUser: null\n}\n\nconst userRed = (state = INITIAL_STATE, action) => \n{    \n    switch (action.type) \n    {\n        case UserActionTypes.GOOGLE_SIGN_IN_SUCCESS:\n        case UserActionTypes.EMAIL_SIGN_IN_SUCCESS:\n            return {\n                ...state,\n                currentUser: action.payload\n            };\n\n        default:\n            return state;\n    }\n}\n\nexport default userRed;"]},"metadata":{},"sourceType":"module"}