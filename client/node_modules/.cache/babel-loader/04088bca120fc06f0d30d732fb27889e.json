{"ast":null,"code":"import _objectWithoutProperties from \"/Users/pepsico/React/e-comm/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/pepsico/React/e-comm/src/components/spinner/spinner.component.jsx\";\nimport React from 'react';\nimport { SpinnerOverlay, SpinnerContainer } from \"./spinner.styles\";\n\nconst Spinner = WrappedComponent => (_ref) => {\n  let isLoading = _ref.isLoading,\n      otherProps = _objectWithoutProperties(_ref, [\"isLoading\"]);\n\n  return isLoading ? React.createElement(SpinnerOverlay, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, React.createElement(SpinnerContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  })) : React.createElement(WrappedComponent, Object.assign({}, otherProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }));\n};\n\nexport default Spinner;","map":{"version":3,"sources":["/Users/pepsico/React/e-comm/src/components/spinner/spinner.component.jsx"],"names":["React","SpinnerOverlay","SpinnerContainer","Spinner","WrappedComponent","isLoading","otherProps"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,EAAyBC,gBAAzB,QAAiD,kBAAjD;;AAEA,MAAMC,OAAO,GAAGC,gBAAgB,IAAI,UAAgC;AAAA,MAA9BC,SAA8B,QAA9BA,SAA8B;AAAA,MAAhBC,UAAgB;;AAChE,SAAOD,SAAS,GACZ,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADY,GAKhB,oBAAC,gBAAD,oBAAsBC,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KALA;AAMH,CAPD;;AASA,eAAeH,OAAf","sourcesContent":["import React from 'react'\nimport { SpinnerOverlay, SpinnerContainer } from \"./spinner.styles\";\n\nconst Spinner = WrappedComponent => ({isLoading, ...otherProps}) => {\n    return isLoading ?  (\n        <SpinnerOverlay>\n            <SpinnerContainer/>\n        </SpinnerOverlay>\n    )   :\n    <WrappedComponent {...otherProps}/>\n}\n\nexport default Spinner;"]},"metadata":{},"sourceType":"module"}