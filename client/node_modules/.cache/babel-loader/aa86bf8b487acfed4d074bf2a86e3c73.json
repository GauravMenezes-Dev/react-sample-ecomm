{"ast":null,"code":"import { createSelector } from 'reselect';\n\nconst selectShop = state => state.shop;\n\nexport const selectCollectionHeaders = createSelector([selectShop], shop => shop.collections);\nexport const selectCollForPreview = createSelector([selectCollectionHeaders], collections => collections ? Object.keys(collections).map(key => collections[key]) : []);\nexport const selectCollection = collectionUrlParam => createSelector([selectCollectionHeaders], collections => collections ? collections[collectionUrlParam] : null);\nexport const selectIsCollFetch = createSelector([selectShop], shop => shop.isFetching);\nexport const selCollLoaded = createSelector([selectShop], shop => !!shop.collections);","map":{"version":3,"sources":["/Users/pepsico/React/e-comm/src/redux/shop/shop.selectors.js"],"names":["createSelector","selectShop","state","shop","selectCollectionHeaders","collections","selectCollForPreview","Object","keys","map","key","selectCollection","collectionUrlParam","selectIsCollFetch","isFetching","selCollLoaded"],"mappings":"AAAA,SAAQA,cAAR,QAA6B,UAA7B;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC;;AAEA,OAAO,MAAMC,uBAAuB,GAAGJ,cAAc,CACjD,CAACC,UAAD,CADiD,EAEjDE,IAAI,IAAIA,IAAI,CAACE,WAFoC,CAA9C;AAKP,OAAO,MAAMC,oBAAoB,GAAGN,cAAc,CAC9C,CAACI,uBAAD,CAD8C,EAE7CC,WAAD,IACKA,WAAD,GAAiBE,MAAM,CAACC,IAAP,CAAYH,WAAZ,EAAyBI,GAAzB,CAA6BC,GAAG,IAAIL,WAAW,CAACK,GAAD,CAA/C,CAAjB,GAAwE,EAH9B,CAA3C;AAOP,OAAO,MAAMC,gBAAgB,GAAIC,kBAAD,IAAwBZ,cAAc,CAClE,CAACI,uBAAD,CADkE,EAElEC,WAAW,IAAKA,WAAW,GAAGA,WAAW,CAACO,kBAAD,CAAd,GAAqC,IAFE,CAA/D;AAKP,OAAO,MAAMC,iBAAiB,GAAGb,cAAc,CAC3C,CAACC,UAAD,CAD2C,EAE3CE,IAAI,IAAIA,IAAI,CAACW,UAF8B,CAAxC;AAKP,OAAO,MAAMC,aAAa,GAAGf,cAAc,CACvC,CAACC,UAAD,CADuC,EAEvCE,IAAI,IAAI,CAAC,CAACA,IAAI,CAACE,WAFwB,CAApC","sourcesContent":["import {createSelector} from 'reselect'\n\nconst selectShop = state => state.shop;\n\nexport const selectCollectionHeaders = createSelector(\n    [selectShop],\n    shop => shop.collections\n)\n\nexport const selectCollForPreview = createSelector(\n    [selectCollectionHeaders],\n    (collections) => (\n        (collections) ? (Object.keys(collections).map(key => collections[key])):[]\n    )\n)\n\nexport const selectCollection = (collectionUrlParam) => createSelector(\n    [selectCollectionHeaders],\n    collections => (collections ? collections[collectionUrlParam] : null)\n)\n\nexport const selectIsCollFetch = createSelector(\n    [selectShop],\n    shop => shop.isFetching\n)\n\nexport const selCollLoaded = createSelector(\n    [selectShop],\n    shop => !!shop.collections\n)"]},"metadata":{},"sourceType":"module"}