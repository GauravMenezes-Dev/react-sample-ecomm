{"ast":null,"code":"import _defineProperty from \"/Users/pepsico/React/e-comm/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/pepsico/React/e-comm/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/pepsico/React/e-comm/src/components/sign-in/sign-in.components.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport './sign-in.styles.scss';\nimport FormInput from '../form-input/form-input.components';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\nimport { connect } from 'react-redux';\n\nconst SignIn = ({\n  esis,\n  gsis\n}) => {\n  const _useState = useState({\n    email: '',\n    password: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        userCred = _useState2[0],\n        setCreds = _useState2[1];\n\n  const email = userCred.email,\n        password = userCred.password;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    esis(email, password);\n  };\n\n  const handleChange = event => {\n    const _event$target = event.target,\n          value = _event$target.value,\n          name = _event$target.name;\n    setCreds(_objectSpread({}, userCred, {\n      [name]: value\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"sign-in\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Sign me in!\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \" Sign in with your Email and Password!\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    name: \"email\",\n    value: email,\n    handleChange: handleChange,\n    label: \"Email\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    name: \"password\",\n    type: \"password\",\n    value: password,\n    handleChange: handleChange,\n    label: \"Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"buttons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Sign In!\"), React.createElement(CustomButton, {\n    type: \"button\",\n    onClick: gsis,\n    isGoogleSignIn: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Sign in With Google!\"))));\n};\n\nconst mdtp = dispatch => ({\n  gsis: () => dispatch(googleSignInStart()),\n  esis: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mdtp)(SignIn);","map":{"version":3,"sources":["/Users/pepsico/React/e-comm/src/components/sign-in/sign-in.components.jsx"],"names":["React","useState","useEffect","FormInput","CustomButton","googleSignInStart","emailSignInStart","connect","SignIn","esis","gsis","email","password","userCred","setCreds","handleSubmit","event","preventDefault","handleChange","target","value","name","mdtp","dispatch"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,OAAO,uBAAP;AACA,OAAOC,SAAP,MAAsB,qCAAtB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,SAAQC,iBAAR,EAA2BC,gBAA3B,QAAkD,+BAAlD;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAMC,EAAAA;AAAN,CAAD,KAAiB;AAAA,oBACCT,QAAQ,CACjC;AACIU,IAAAA,KAAK,EAAE,EADX;AAEIC,IAAAA,QAAQ,EAAE;AAFd,GADiC,CADT;AAAA;AAAA,QACrBC,QADqB;AAAA,QACXC,QADW;;AAAA,QAOrBH,KAPqB,GAOHE,QAPG,CAOrBF,KAPqB;AAAA,QAOfC,QAPe,GAOHC,QAPG,CAOfD,QAPe;;AAQ5B,QAAMG,YAAY,GAAG,MAAMC,KAAN,IAAe;AAChCA,IAAAA,KAAK,CAACC,cAAN;AACAR,IAAAA,IAAI,CAACE,KAAD,EAAOC,QAAP,CAAJ;AACH,GAHD;;AAKA,QAAMM,YAAY,GAAGF,KAAK,IAAI;AAAA,0BACLA,KAAK,CAACG,MADD;AAAA,UACnBC,KADmB,iBACnBA,KADmB;AAAA,UACbC,IADa,iBACbA,IADa;AAE1BP,IAAAA,QAAQ,mBACDD,QADC;AACS,OAACQ,IAAD,GAAOD;AADhB,OAAR;AAGH,GALD;;AAOA,SACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAFJ,EAGI;AAAM,IAAA,QAAQ,EAAEL,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AACI,IAAA,IAAI,EAAC,OADT;AAEI,IAAA,KAAK,EAAEJ,KAFX;AAGI,IAAA,YAAY,EAAEO,YAHlB;AAII,IAAA,KAAK,EAAC,OAJV;AAKI,IAAA,QAAQ,MALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAOI,oBAAC,SAAD;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,IAAI,EAAC,UAFT;AAGI,IAAA,KAAK,EAAEN,QAHX;AAII,IAAA,YAAY,EAAEM,YAJlB;AAKI,IAAA,KAAK,EAAC,UALV;AAMI,IAAA,QAAQ,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,EAcI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAII,oBAAC,YAAD;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,OAAO,EAAER,IAFb;AAGI,IAAA,cAAc,MAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAJJ,CAdJ,CAHJ,CADJ;AAiCH,CArDD;;AAuDA,MAAMY,IAAI,GAAGC,QAAQ,KAAK;AACtBb,EAAAA,IAAI,EAAE,MAAKa,QAAQ,CAAClB,iBAAiB,EAAlB,CADG;AAEtBI,EAAAA,IAAI,EAAE,CAACE,KAAD,EAAOC,QAAP,KAAmBW,QAAQ,CAACjB,gBAAgB,CAAC;AAACK,IAAAA,KAAD;AAAOC,IAAAA;AAAP,GAAD,CAAjB;AAFX,CAAL,CAArB;;AAKA,eAAeL,OAAO,CAAC,IAAD,EAAMe,IAAN,CAAP,CAAmBd,MAAnB,CAAf","sourcesContent":["import React, {useState,useEffect} from 'react';\nimport './sign-in.styles.scss';\nimport FormInput from '../form-input/form-input.components'\nimport CustomButton from '../custom-button/custom-button.component';\nimport {googleSignInStart, emailSignInStart} from '../../redux/user/user.actions'\nimport {connect} from 'react-redux'\n\nconst SignIn = ({esis,gsis}) => {\n    const [userCred, setCreds] = useState(\n        {\n            email: '',\n            password: ''\n        }\n    )\n    const {email,password} = userCred\n    const handleSubmit = async event => {\n        event.preventDefault();        \n        esis(email,password);\n    }\n\n    const handleChange = event => {\n        const {value,name} = event.target\n        setCreds({\n            ...userCred, [name]:value\n        })\n    }\n  \n    return(\n        <div className=\"sign-in\">\n            <h2>Sign me in!</h2>\n            <span> Sign in with your Email and Password!</span>\n            <form onSubmit={handleSubmit}>\n                <FormInput \n                    name=\"email\" \n                    value={email} \n                    handleChange={handleChange} \n                    label=\"Email\" \n                    required/>\n                <FormInput \n                    name=\"password\" \n                    type=\"password\"\n                    value={password} \n                    handleChange={handleChange} \n                    label=\"Password\"\n                    required/>\n                <div className=\"buttons\">\n                    <CustomButton type=\"submit\">\n                        Sign In!\n                    </CustomButton>\n                    <CustomButton \n                        type=\"button\" \n                        onClick={gsis} \n                        isGoogleSignIn\n                    >\n                        Sign in With Google!\n                    </CustomButton>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nconst mdtp = dispatch => ({\n    gsis: ()=> dispatch(googleSignInStart()),\n    esis: (email,password)=> dispatch(emailSignInStart({email,password}))\n})\n\nexport default connect(null,mdtp)(SignIn)"]},"metadata":{},"sourceType":"module"}