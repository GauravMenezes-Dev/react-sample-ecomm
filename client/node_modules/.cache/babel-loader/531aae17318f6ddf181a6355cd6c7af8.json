{"ast":null,"code":"import _defineProperty from \"/Users/pepsico/React/e-comm/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/pepsico/React/e-comm/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/pepsico/React/e-comm/src/components/sign-up/sign-up.component.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.components';\nimport CustomButton from '../custom-button/custom-button.component';\nimport './sign-up.styles.scss';\nimport { userSignUpStart } from '../../redux/user/user.actions';\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  const _useState = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        userCreds = _useState2[0],\n        setUserCreds = _useState2[1];\n\n  const displayName = userCreds.displayName,\n        email = userCreds.email,\n        password = userCreds.password,\n        confirmPassword = userCreds.confirmPassword;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"Passwords don't match!\");\n      return;\n    }\n\n    signUpStart({\n      displayName,\n      email,\n      password\n    });\n  };\n\n  const handleChange = event => {\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n    setUserCreds(_objectSpread({}, userCreds, {\n      [name]: value\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"sign-up\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Nah I'm a dipshit sign me up\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Sign up with your email and password\"), React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    onChange: handleChange,\n    label: \"Display Name\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: handleChange,\n    label: \"Email\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: handleChange,\n    label: \"Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    onChange: handleChange,\n    label: \"Confirm Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Sign Up!\")));\n};\n\nconst mdtp = dispatch => ({\n  signUpStart: userCredentials => dispatch(userSignUpStart(userCredentials))\n});\n\nexport default connect(null, mdtp)(SignUp);","map":{"version":3,"sources":["/Users/pepsico/React/e-comm/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","userSignUpStart","SignUp","signUpStart","displayName","email","password","confirmPassword","userCreds","setUserCreds","handleSubmit","event","preventDefault","alert","handleChange","target","name","value","mdtp","dispatch","userCredentials"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport {connect} from 'react-redux'\nimport FormInput from '../form-input/form-input.components'\nimport CustomButton from '../custom-button/custom-button.component'\nimport './sign-up.styles.scss'\nimport { userSignUpStart } from '../../redux/user/user.actions';\n\nconst SignUp = ({signUpStart}) => {\n    const [userCreds,setUserCreds] = useState({\n        displayName: '',\n        email: '',\n        password: '',\n        confirmPassword: ''\n    })\n    const {displayName,email,password,confirmPassword} = userCreds\n    const handleSubmit = async event => {\n        event.preventDefault();\n        if(password !== confirmPassword){\n            alert(\"Passwords don't match!\")\n            return;\n        }\n       signUpStart({displayName,email,password})\n    }\n\n    const handleChange = event => {\n        const {name,value} = event.target;\n        setUserCreds({\n            ...userCreds,\n            [name]:value\n        }) \n    }\n    \n    return (\n        <div className=\"sign-up\">\n            <h2 className='title'>\n                Nah I'm a dipshit sign me up\n            </h2>\n            <span>Sign up with your email and password</span>\n            <form className=\"sign-up-form\" onSubmit={handleSubmit}>\n                <FormInput type=\"text\" name=\"displayName\" value={displayName} onChange={handleChange} label=\"Display Name\" required/>\n                <FormInput type=\"email\" name=\"email\" value={email} onChange={handleChange} label=\"Email\" required/>\n                <FormInput type=\"password\" name=\"password\" value={password} onChange={handleChange} label=\"Password\" required/>\n                <FormInput type=\"password\" name=\"confirmPassword\" value={confirmPassword} onChange={handleChange} label=\"Confirm Password\" required/>\n                <CustomButton type=\"submit\">Sign Up!</CustomButton>\n            </form>\n        </div>\n    )\n    \n}\n\nconst mdtp = dispatch => ({\n    signUpStart: userCredentials => dispatch(userSignUpStart(userCredentials))\n})\n\nexport default connect(null,mdtp)(SignUp)"]},"metadata":{},"sourceType":"module"}