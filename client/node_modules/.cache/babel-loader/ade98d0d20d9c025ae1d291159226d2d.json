{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport logger from 'redux-logger';\nimport { persistStore } from 'redux-persist';\nimport createSagaMiddleware from 'redux-saga';\nimport rootRed from './root-reducer';\nimport rootSaga from './root-saga';\nconst sagaMidWare = createSagaMiddleware();\nconst middlewares = [sagaMidWare];\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(logger);\n}\n\nexport const store = createStore(rootRed, applyMiddleware(...middlewares));\nsagaMidWare.run(rootSaga());\nexport const persistor = persistStore(store);\nexport default {\n  store,\n  persistor\n};","map":{"version":3,"sources":["/Users/pepsico/React/e-comm/src/redux/store.js"],"names":["createStore","applyMiddleware","logger","persistStore","createSagaMiddleware","rootRed","rootSaga","sagaMidWare","middlewares","process","env","NODE_ENV","push","store","run","persistor"],"mappings":"AAAA,SAAQA,WAAR,EAAoBC,eAApB,QAA0C,OAA1C;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,QAAP,MAAqB,aAArB;AAEA,MAAMC,WAAW,GAAGH,oBAAoB,EAAxC;AAEA,MAAMI,WAAW,GAAG,CAACD,WAAD,CAApB;;AAEA,IAAGE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA5B,EAA0C;AACtCH,EAAAA,WAAW,CAACI,IAAZ,CAAiBV,MAAjB;AACH;;AACD,OAAO,MAAMW,KAAK,GAAGb,WAAW,CAC5BK,OAD4B,EAE5BJ,eAAe,CAAC,GAAGO,WAAJ,CAFa,CAAzB;AAKPD,WAAW,CAACO,GAAZ,CAAgBR,QAAQ,EAAxB;AACA,OAAO,MAAMS,SAAS,GAAGZ,YAAY,CAACU,KAAD,CAA9B;AACP,eAAe;AAACA,EAAAA,KAAD;AAAOE,EAAAA;AAAP,CAAf","sourcesContent":["import {createStore,applyMiddleware} from 'redux'\nimport logger from 'redux-logger'\nimport { persistStore } from 'redux-persist'\nimport createSagaMiddleware from 'redux-saga'\nimport rootRed from './root-reducer'\nimport rootSaga from './root-saga'\n\nconst sagaMidWare = createSagaMiddleware();\n\nconst middlewares = [sagaMidWare];\n\nif(process.env.NODE_ENV === 'development'){\n    middlewares.push(logger)\n}\nexport const store = createStore(\n    rootRed, \n    applyMiddleware(...middlewares)\n)\n\nsagaMidWare.run(rootSaga());\nexport const persistor = persistStore(store)\nexport default {store,persistor}\n"]},"metadata":{},"sourceType":"module"}